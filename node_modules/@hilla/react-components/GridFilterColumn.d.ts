import { type ComponentType, type ReactElement, type RefAttributes } from 'react';
import { type GridFilterColumnElement, type GridFilterColumnProps as _GridFilterColumnProps } from './generated/GridFilterColumn.js';
import type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';
export * from './generated/GridFilterColumn.js';
export type GridFilterColumnProps<TItem> = Partial<Omit<_GridFilterColumnProps<TItem>, 'children' | 'footerRenderer' | 'headerRenderer' | 'renderer'>> & Readonly<{
    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;
    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;
    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;
}>;
declare const ForwardedGridFilterColumn: <TItem = any>(props: Partial<Omit<_GridFilterColumnProps<TItem>, "children" | "renderer" | "headerRenderer" | "footerRenderer">> & Readonly<{
    children?: ComponentType<Readonly<{
        item: TItem;
        model: import("@vaadin/grid/src/vaadin-grid-mixin.js").GridItemModel<TItem>;
        original: import("@vaadin/grid/src/vaadin-grid-column.js").GridColumn<TItem>;
    }>> | null | undefined;
    footerRenderer?: ComponentType<Readonly<{
        original: import("@vaadin/grid/src/vaadin-grid-column.js").GridColumn<TItem>;
    }>> | null | undefined;
    renderer?: ComponentType<Readonly<{
        item: TItem;
        model: import("@vaadin/grid/src/vaadin-grid-mixin.js").GridItemModel<TItem>;
        original: import("@vaadin/grid/src/vaadin-grid-column.js").GridColumn<TItem>;
    }>> | null | undefined;
}> & RefAttributes<GridFilterColumnElement<TItem>>) => ReactElement | null;
export { ForwardedGridFilterColumn as GridFilterColumn };
//# sourceMappingURL=GridFilterColumn.d.ts.map